@page "/"
@using Client.Authentication
@layout EmptyLayout
@inject NavigationManager NavigationManager
@inject AuthenticationService AuthenticationService
@inject AuthenticatedHttpClient NavyApiClient

<PageTitle>Home - Republic Navy</PageTitle>

<link rel="stylesheet" href="css/PublicPageStyle.css"/>

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<div class="video-container">
    <video autoplay loop muted playsinline>
        <source src="https://republicnavywebsite.blob.core.windows.net/websiteimages/Venator.mp4" type="video/mp4" />
    </video>
    <div class="video-overlay"></div>
</div>

<MudButton EndIcon="@Icons.Custom.Brands.Steam"
           Variant="Variant.Outlined"
           Color="Color.Primary"
           Size="Size.Large"
           Class="top-right-corner-position"
           OnClick="LoginWithSteam">
    Sign in
</MudButton>

<div id="content">
    <MudMainContent>
        <MudText Color="Color.Success"
                 Typo="Typo.h4">
            Welcome to the Republic Navy!
        </MudText>

        <MudDivider Class="my-8" 
                    DividerType="DividerType.Middle"/>

        <MudAlert Severity="Severity.Info"
                  NoIcon="true"
                  Dense="true"
                  ContentAlignment="HorizontalAlignment.Center">

            <MudStack Row="true"
                      AlignItems="AlignItems.Center"
                      Spacing="4">

                <MudText Align="Align.Center">
                    Learn more about
                </MudText>

                <MudLink Href="https://superiorservers.co/"
                         Target="_blank">
                    <MudImage Height="50"
                              Src="https://superiorservers.co/static/images/site-logo_reduced.png"/>
                </MudLink>
            </MudStack>

        </MudAlert>

    </MudMainContent>
</div>

@code
{
    protected override async Task OnInitializedAsync()
    {
        var isSavedTokenPresent = await AuthenticationService.IsTokenPresentOnStorage();
        if (isSavedTokenPresent)
        {
            NavigationManager.NavigateTo(WebpagePaths.Dashboard);
        }
    }

    private async Task LoginWithSteam()
    {
        try
        {
            var response = await NavyApiClient.SendAuthorizedRequestAsync(HttpMethod.Get, ApiPaths.GetSteamLoginUrl, false);
            var loginUrl = await response.Content.ReadAsStringAsync();
            NavigationManager.NavigateTo(loginUrl, forceLoad: true);
        }
        catch(Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }
    
}
